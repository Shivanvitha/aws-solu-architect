
tg-can have targets in multiple az or outside the VPC  also

path based routing, content based routing

Access logs contain additional information and are stored in compressed format

health checks are defined at the target group level and many CloudWatch metrics are reported at the target group level

Attaching a target group to an Auto Scaling group enables you to scale each service dynamically based on demand.

lb states : provisioning, active, failed

IP Address Type

ipv4
The load balancer supports only IPv4 addresses (for example, 192.0.2.1)

dualstack
The load balancer supports both IPv4 and IPv6 addresses (for example, 2001:0db8:85a3:0:0:8a2e:0370:7334).

Clients that communicate with the load balancer using IPv4 addresses resolve the A record 

clients that communicate with the load balancer using IPv6 addresses resolve the AAAA record.

However, the load balancer communicates with its targets using IPv4 addresses, 
  regardless of how the client communicates with the load balancer. -Note that internal load balancers must use IPv4 addresses.

By default, deletion protection is disabled for your load balancer

The idle timeout value, in seconds. The default is 60 seconds.

Indicates whether HTTP/2 is enabled. The default is true.

You can use AWS WAF with your Application Load Balancer to allow or block requests based on the rules in a web access control list (web ACL).

lb front end conection - closed when idle time out expires -- at least 1 byte of data before each idle timeout period elapses, and increase the length of the idle timeout period as needed.

lb back end conection - enable the HTTP keep-alive option for your EC2 instances.

You can enable HTTP keep-alive in the web server settings for your EC2 instances. If you enable HTTP keep-alive, the load balancer can reuse back-end connections until the keep-alive timeout expires.

 We also recommend that you configure the idle timeout of your application to be larger than the idle timeout configured for the load balancer.
 
 For Scheme, an Internet-facing load balancer routes requests from clients over the Internet to targets. 
 
 An internal load balancer routes requests to targets using private IP addresses.
 
 When you use HTTPS for your load balancer listener, you must deploy an SSL certificate on your load balancer.
 
 The load balancer uses this certificate to terminate the connection and decrypt requests from clients before sending them to the targets.
 
 You can enable or disable the Availability Zones for your load balancer at any time. 
 
 After you enable an Availability Zone, the load balancer starts routing requests to the registered targets in that Availability Zone.
 
 After you disable an Availability Zone, the targets in that Availability Zone remain registered with the load balancer, but the load balancer will not route requests to them.

Note that you can select only one subnet per Availability Zone.

Do not use the aws: prefix in your tag names or values because it is reserved for AWS use. You can't edit or delete tag names or values with this prefix.

Tags with this prefix do not count against your tags per resource limit.

As soon as your load balancer becomes available, you are billed for each hour or partial hour that you keep it running.

You can't delete a load balancer if deletion protection is enabled. 

Note that deleting a load balancer does not affect its registered targets.

If you have a CNAME record for your domain that points to your load balancer, point it to a new location and wait for the DNS change to take effect before deleting your load balancer.

Listener Configuration

Listeners support the following protocols and ports:

Protocols: HTTP, HTTPS
Ports: 1-65535
You can use an HTTPS listener to offload the work of encryption and decryption to your load balancer so that your applications can focus on their business logic.

If the listener protocol is HTTPS, you must deploy exactly one SSL server certificate on the listener. 

Application Load Balancers provide native support for WebSockets. You can use WebSockets with both HTTP and HTTPS listeners.

Application Load Balancers provide native support for HTTP/2 with HTTPS listeners. 

You can send up to 128 requests in parallel using one HTTP/2 connection.

The load balancer converts these to individual HTTP/1.1 requests and distributes them across the healthy targets in the target group. 

Because HTTP/2 uses front-end connections more efficiently, you might notice fewer connections between clients and the load balancer.

You can't use the server-push feature of HTTP/2

Listener Rules :

When you create a listener, you define actions for the default rule. Default rules can't have conditions. You can not edit or delete.

Rule Priority

Each rule has a priority. Rules are evaluated in priority order, from the lowest value to the highest value. 

The default rule is evaluated last. You can change the priority of a nondefault rule at any time. You cannot change the priority of the default rule. 

Update Server Certificates

When you create an HTTPS listener, you specify a default certificate. You can also create a certificate list for the listener by adding additional certificates.

Each certificate comes with a validity period. You must ensure that you renew or replace the certificate before its validity period ends. Renewing or replacing a certificate does not affect in-flight requests that were received by the load balancer node and are pending routing to a healthy target. After a certificate is renewed, new requests use the renewed certificate. After a certificate is replaced, new requests use the new certificate.

You can manage certificate renewal and replacement as follows:

Certificates provided by AWS Certificate Manager and deployed on your load balancer can be renewed automatically. ACM attempts to renew certificates before they expire. For more information, see Managed Renewal in the AWS Certificate Manager User Guide.
If you imported a certificate into ACM, you must monitor the expiration date of the certificate and renew it before it expires. For more information, see Importing Certificates in the AWS Certificate Manager User Guide.
If you imported a certificate into IAM, you must create a new certificate, import the new certificate to ACM or IAM, add the new certificate to your load balancer, and remove the expired certificate from your load balancer.
Limitation

ACM supports RSA certificates with a 4096 key length and EC certificates. However, you cannot install these certificates on your load balancer through integration with ACM. You must upload these certificates to IAM in order to use them with your load balancer.

You can replace the default certificate for your listener


Monitor Your Application Load Balancers

1. Access Logs : used to analyze the traffic patterns and troubleshoot issues -disabled by default
compressed
There is no additional charge for access logs and not charged for the bandwidth used by Elastic Load Balancing to send log files to Amazon S3
Server-side encryption encrypts only the object data, not object metadata.
The bucket cannot use encryption.
The bucket must be in the same region as your load balancer.
The bucket can be owned by a different account than the account that owns the load balancer.
Bucket policies are a collection of JSON statements written in the access policy language to define access permissions for your bucket.
Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL.
For more information, see Querying Application Load Balancer Logs in the Amazon Athena User Guide.
Loggly
Splunk
Sumo Logic
2. CloudWatch Metrics : we can check whether the system is performing as expected
3.
